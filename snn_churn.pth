import torch
import torch.nn as nn
import norse.torch as norse

class SNNModel(nn.Module):
    def __init__(self, input_size, hidden_size, output_size):
        super(SNNModel, self).__init__()
        self.fc1 = nn.Linear(input_size, hidden_size)
        self.lif1 = norse.LIFCell()
        self.fc2 = nn.Linear(hidden_size, output_size)
        self.lif2 = norse.LIFCell()

    def forward(self, x, lif_state1=None, lif_state2=None):
        x = self.fc1(x)
        z1, lif_state1 = self.lif1(x, lif_state1)
        x = self.fc2(z1)
        z2, lif_state2 = self.lif2(x, lif_state2)
        return z2
